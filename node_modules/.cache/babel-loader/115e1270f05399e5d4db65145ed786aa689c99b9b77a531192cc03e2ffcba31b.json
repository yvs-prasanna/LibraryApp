{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\React Projects\\\\flaerhome\\\\my-frontend\\\\src\\\\components\\\\BookDetails\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetchingComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Define an async function to fetch data\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://freetestapi.com/api/v1/books\"); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const result = await response.json(); // Parse the JSON data\n        setData(result); // Update the state with fetched data\n      } catch (error) {\n        setError(error.message); // Set error if fetch fails\n      }\n    };\n    fetchData(); // Call the fetch function when the component mounts\n  }, []);\n  const {\n    id\n  } = useParams();\n  const filteredBook = data.filter(each => each.id === parseInt(id));\n  const {\n    title,\n    author,\n    cover_image,\n    description,\n    genre,\n    publication_year\n  } = filteredBook[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"blog-details-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"author-pic\",\n        src: avatarUrl,\n        alt: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"details-author-name\",\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"blog-image\",\n      src: imageUrl,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"blog-content\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetchingComponent, \"N2nhsr3THgMhEeKWBXoLlDMiulo=\", false, function () {\n  return [useParams];\n});\n_c = DataFetchingComponent;\nexport default DataFetchingComponent;\nvar _c;\n$RefreshReg$(_c, \"DataFetchingComponent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","DataFetchingComponent","_s","data","setData","error","setError","fetchData","response","fetch","ok","Error","result","json","message","id","filteredBook","filter","each","parseInt","title","author","cover_image","description","genre","publication_year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","avatarUrl","alt","imageUrl","content","_c","$RefreshReg$"],"sources":["C:/Personal/React Projects/flaerhome/my-frontend/src/components/BookDetails/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst DataFetchingComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Define an async function to fetch data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"https://freetestapi.com/api/v1/books\"); // Replace with your API endpoint\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n        const result = await response.json(); // Parse the JSON data\r\n        setData(result); // Update the state with fetched data\r\n      } catch (error) {\r\n        setError(error.message); // Set error if fetch fails\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the fetch function when the component mounts\r\n  }, []);\r\n\r\n  const { id } = useParams();\r\n  const filteredBook = data.filter((each) => each.id === parseInt(id));\r\n  const { title, author, cover_image, description, genre, publication_year } =\r\n    filteredBook[0];\r\n\r\n  return (\r\n    <div className=\"blog-info\">\r\n      <h1 className=\"blog-details-title\">{title}</h1>\r\n\r\n      <div className=\"author-details\">\r\n        <img className=\"author-pic\" src={avatarUrl} alt={author} />\r\n        <p className=\"details-author-name\">{author}</p>\r\n      </div>\r\n\r\n      <img className=\"blog-image\" src={imageUrl} alt={title} />\r\n      <p className=\"blog-content\">{content}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataFetchingComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}