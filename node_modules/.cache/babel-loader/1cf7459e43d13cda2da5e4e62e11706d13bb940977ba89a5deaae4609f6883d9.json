{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\React Projects\\\\flaerhome\\\\my-frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport bookContext from \"./context/BookContext\";\nimport Home from \"./components/Home\";\nimport BookDetails from \"./components/BookDetails\";\nimport Library from \"./components/Library\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      likedBooks: []\n    };\n    this.getBooks = async () => {\n      const url = \"https://freetestapi.com/api/v1/books\";\n      const options = {\n        method: \"GET\"\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const modifiedData = data.map(each => ({\n        ...each,\n        isLiked: false\n      }));\n      this.setState({\n        books: modifiedData\n      });\n    };\n    this.onClickLikeButton = id => {\n      const {\n        books\n      } = this.state;\n      const updatedBooks = books.map(each => {\n        if (each.id === id) {\n          return {\n            ...each,\n            isLiked: !each.isLiked\n          };\n        }\n        return each;\n      });\n      const filterlikedBooks = updatedBooks.filter(each => each.isLiked === true);\n      this.setState({\n        books: updatedBooks,\n        likedBooks: filterlikedBooks\n      });\n    };\n  }\n  componentDidMount() {\n    this.getBooks();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(bookContext.Provider, {\n      value: {\n        books: this.state.books,\n        likedBooks: this.state.likedBooks,\n        onClickLikeButton: this.onClickLikeButton\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            Component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/:id\",\n            Component: BookDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/library\",\n            Component: Library\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","BrowserRouter","Routes","Route","bookContext","Home","BookDetails","Library","jsxDEV","_jsxDEV","App","constructor","args","state","books","likedBooks","getBooks","url","options","method","response","fetch","data","json","modifiedData","map","each","isLiked","setState","onClickLikeButton","id","updatedBooks","filterlikedBooks","filter","componentDidMount","render","Provider","value","children","exact","path","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Personal/React Projects/flaerhome/my-frontend/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport bookContext from \"./context/BookContext\";\n\nimport Home from \"./components/Home\";\nimport BookDetails from \"./components/BookDetails\";\nimport Library from \"./components/Library\";\n\nclass App extends Component {\n  state = { books: [], likedBooks: [] };\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  getBooks = async () => {\n    const url = \"https://freetestapi.com/api/v1/books\";\n    const options = {\n      method: \"GET\",\n    };\n    const response = await fetch(url, options);\n    const data = await response.json();\n    const modifiedData = data.map((each) => ({\n      ...each,\n      isLiked: false,\n    }));\n\n    this.setState({ books: modifiedData });\n  };\n\n  onClickLikeButton = (id) => {\n    const { books } = this.state;\n\n    const updatedBooks = books.map((each) => {\n      if (each.id === id) {\n        return { ...each, isLiked: !each.isLiked };\n      }\n      return each;\n    });\n\n    const filterlikedBooks = updatedBooks.filter(\n      (each) => each.isLiked === true\n    );\n\n    this.setState({ books: updatedBooks, likedBooks: filterlikedBooks });\n  };\n\n  render() {\n    return (\n      <bookContext.Provider\n        value={{\n          books: this.state.books,\n          likedBooks: this.state.likedBooks,\n          onClickLikeButton: this.onClickLikeButton,\n        }}\n      >\n        <BrowserRouter>\n          <Routes>\n            <Route exact path=\"/\" Component={Home} />\n            <Route path=\"/books/:id\" Component={BookDetails} />\n            <Route path=\"/library\" Component={Library} />\n          </Routes>\n        </BrowserRouter>\n      </bookContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}