{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\React Projects\\\\flaerhome\\\\my-frontend\\\\src\\\\components\\\\BookDetails\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookDetails = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Define an async function to fetch data\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://freetestapi.com/api/v1/books\"); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const result = await response.json(); // Parse the JSON data\n        setData(result); // Update the state with fetched data\n      } catch (error) {\n        setError(error.message); // Set error if fetch fails\n      }\n    };\n    fetchData(); // Call the fetch function when the component mounts\n  }, []);\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  console.log(typeof id);\n  const bookId = parseInt(id);\n  console.log(typeof bookId);\n  const filteredBook = data.filter(each => each.id === bookId);\n  console.log(filteredBook);\n  const reqObj = filteredBook[0];\n  console.log(reqObj);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"book-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"book-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: reqObj.cover_image,\n        alt: \"Book Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"book-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"book-title\",\n        children: reqObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"book-author\",\n        children: [\"by \", reqObj.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"book-description\",\n        children: reqObj.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"book-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \" \", reqObj.genre[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Published:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \" \", reqObj.publication_year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ISBN:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \" 978-0743273565\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(BookDetails, \"N2nhsr3THgMhEeKWBXoLlDMiulo=\", false, function () {\n  return [useParams];\n});\n_c = BookDetails;\nexport default BookDetails;\nvar _c;\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","BookDetails","_s","data","setData","error","setError","fetchData","response","fetch","ok","Error","result","json","message","id","console","log","bookId","parseInt","filteredBook","filter","each","reqObj","class","children","src","cover_image","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","author","description","genre","publication_year","_c","$RefreshReg$"],"sources":["C:/Personal/React Projects/flaerhome/my-frontend/src/components/BookDetails/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst BookDetails = () => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Define an async function to fetch data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"https://freetestapi.com/api/v1/books\"); // Replace with your API endpoint\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch data\");\r\n        }\r\n        const result = await response.json(); // Parse the JSON data\r\n        setData(result); // Update the state with fetched data\r\n      } catch (error) {\r\n        setError(error.message); // Set error if fetch fails\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the fetch function when the component mounts\r\n  }, []);\r\n\r\n  const { id } = useParams();\r\n  console.log(id);\r\n  console.log(typeof id);\r\n  const bookId = parseInt(id);\r\n  console.log(typeof bookId);\r\n  const filteredBook = data.filter((each) => each.id === bookId);\r\n  console.log(filteredBook);\r\n  const reqObj = filteredBook[0];\r\n\r\n  console.log(reqObj);\r\n\r\n  return (\r\n    <div class=\"book-details-container\">\r\n      <div class=\"book-image\">\r\n        <img src={reqObj.cover_image} alt=\"Book Cover\" />\r\n      </div>\r\n      <div class=\"book-info\">\r\n        <h1 class=\"book-title\">{reqObj.title}</h1>\r\n        <h3 class=\"book-author\">by {reqObj.author}</h3>\r\n        <p class=\"book-description\">{reqObj.description}</p>\r\n        <div class=\"book-details\">\r\n          <p>\r\n            <strong>Genre:</strong> {reqObj.genre[0]}\r\n          </p>\r\n          <p>\r\n            <strong>Published:</strong> {reqObj.publication_year}\r\n          </p>\r\n          <p>\r\n            <strong>ISBN:</strong> 978-0743273565\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;QACtE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QACtCT,OAAO,CAACQ,MAAM,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC;MAC3B;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEQ;EAAG,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAC1BkB,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EACfC,OAAO,CAACC,GAAG,CAAC,OAAOF,EAAE,CAAC;EACtB,MAAMG,MAAM,GAAGC,QAAQ,CAACJ,EAAE,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAAC,OAAOC,MAAM,CAAC;EAC1B,MAAME,YAAY,GAAGjB,IAAI,CAACkB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKG,MAAM,CAAC;EAC9DF,OAAO,CAACC,GAAG,CAACG,YAAY,CAAC;EACzB,MAAMG,MAAM,GAAGH,YAAY,CAAC,CAAC,CAAC;EAE9BJ,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;EAEnB,oBACEvB,OAAA;IAAKwB,KAAK,EAAC,wBAAwB;IAAAC,QAAA,gBACjCzB,OAAA;MAAKwB,KAAK,EAAC,YAAY;MAAAC,QAAA,eACrBzB,OAAA;QAAK0B,GAAG,EAAEH,MAAM,CAACI,WAAY;QAACC,GAAG,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNhC,OAAA;MAAKwB,KAAK,EAAC,WAAW;MAAAC,QAAA,gBACpBzB,OAAA;QAAIwB,KAAK,EAAC,YAAY;QAAAC,QAAA,EAAEF,MAAM,CAACU;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1ChC,OAAA;QAAIwB,KAAK,EAAC,aAAa;QAAAC,QAAA,GAAC,KAAG,EAACF,MAAM,CAACW,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/ChC,OAAA;QAAGwB,KAAK,EAAC,kBAAkB;QAAAC,QAAA,EAAEF,MAAM,CAACY;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDhC,OAAA;QAAKwB,KAAK,EAAC,cAAc;QAAAC,QAAA,gBACvBzB,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAQ;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACT,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACJhC,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAQ;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACT,MAAM,CAACc,gBAAgB;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACJhC,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAQ;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,mBACxB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxDID,WAAW;EAAA,QAsBAH,SAAS;AAAA;AAAAwC,EAAA,GAtBpBrC,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}